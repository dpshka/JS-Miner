export default {
  "Login": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["BE (*3,JD 'D/.HD"])},
  "Data Plans": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([".77 'D(J'F'*"])},
  "Data without border at yourfingertips {quantity} Travel destinations": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize(["(J'F'* (/HF -/H/ AJ E*F'HD J/C ", _interpolate(_named("quantity")), " H,G'* 'D3A1"])},
  "Search your destination": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'(-+ 9F H,G*C"])},
  "Countries": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'D/HD"])},
  "Download Getcontact to manage and top up your eSIM anytime, anywhere": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["BE (*F2JD Getcontact D%/'1) H4-F eSIM AJ #J HB* HAJ #J EC'F"])},
  "Getcontact Web": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Getcontact Web"])},
  "Getcontact": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Getcontact"])},
  "Premium ve Tariffs": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["H'D*91JA'* Premium"])},
  "Features": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'DEEJ2'*"])},
  "Success Story": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["B55 'DF,'-"])},
  "About Us": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["E9DHE'* 9F'"])},
  "Career": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["EGF)"])},
  "Help": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["E3'9/)"])},
  "Support Center": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'D*9DJE'*"])},
  "Manage Profile Privacy": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["BE (%/'1) EDA *91JA 'D.5H5J) 'D.'5 (C"])},
  "Report a Problem": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["#(D: 9F E4CD)"])},
  "Contact Us": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'*5D (F'"])},
  "Legal Terms": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["B'FHFJ"])},
  "Go to eSIM": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'F*BD %DI eSIM"])},
  "Privacy Policy / GDPR": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["3J'3) 'D.5H5J)"])},
  "Terms of Service": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["41H7 'D./E) D/JF'"])},
  "Purchasing Policy": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["3J'3) 'D41'! D/JF'"])},
  "Email": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'D(1J/ 'D'DC*1HFJ"])},
  "footer.copyright": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["-BHB 'DF41 © 2016-2023 Getverify LDA. CD 'D-BHB E-AH8). Getcontact " 9D'E) *,'1J) E3,D)."])},
  "Secure Checkout": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'D.1H, 'D"EF"])},
  "Select plan and continue": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["-// 'D.7) H'3*E1"])},
  "Login or Register": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["BE (*3,JD 'D/.HD #H 'D'4*1'C"])},
  "Google login": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["3,QD 'D/.HD 9(1 Google"])},
  "Facebook login": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["3,QD 'D/.HD 9(1 Facebook"])},
  "Apple login": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["3,QD 'D/.HD 9(1 Apple"])},
  "or": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["#H"])},
  "Enter Your Email Address": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["#/.D 9FH'F (1J/C 'D'DC*1HFJ"])},
  "Continue": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'3*E1"])},
  "Card Number": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["1BE 'D(7'B)"])},
  "Name On The Card": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'D'3E 9DI 'D(7'B)"])},
  "MM": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["MM"])},
  "YY": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["YY"])},
  "CVV": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["CVV"])},
  "Complete Payment": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["#CED 'D/A9"])},
  "{amount} GB": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([_interpolate(_named("amount")), " :J:'('J*"])},
  "{day} Day Valid": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([_interpolate(_named("day")), " JHE 5'D-"])},
  "{day} Days": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([_interpolate(_named("day")), " #J'E"])},
  "{day} Day": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([_interpolate(_named("day")), " JHE"])},
  "Bundle": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["-2E)"])},
  "{month} month Getcontact Premium": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([_interpolate(_named("month")), " 4G1 Getcontact Premium"])},
  "Back to Plans": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["1,H9 %DI 'D.77"])},
  "eSIM": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["41J-) eSIM"])},
  "When you clicked Payment Complete Button": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["9F/ 'DFB1 AHB 'D21 \"%CE'D 'D/A9\""])},
  "When you clicked Update Button": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["9F/ 'DFB1 AHB 21 'D*-/J+"])},
  "Term of Use": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["41H7 'D'3*./'E"])},
  "Privacy Policy": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["3J'3) .'5)"])},
  "you are deemed to have accepted": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["J9*(1 #FC B/ B(D*"])},
  "3rd Party Integration Service Providers": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["EB/EH ./E'* *C'ED 'D71A 'D+'D+"])},
  "Account Information": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["E9DHE'* 'D-3'("])},
  "Saved Card": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'D(7'B) 'DE-AH8)"])},
  "Update card": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["*-/J+ 'D(7'BG"])},
  "Logout": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["BE (*3,JD 'D.1H,"])},
  "Follow": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["*'(9"])},
  "My eSIM": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["eSIM 'D.'5 (J"])},
  "Install an eSIM on your Device": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["BE (*+(J* eSIM 9DI ,G'2C"])},
  "This plan can only be purchased through the <b>eSIM io</b> mobile application.": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["This plan can only be purchased through the <b>eSIM io</b> mobile application."])},
  "<b>eSIM.getcontact.com</b> service is available in the <b>eSIM.io</b> application.": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["<b>eSIM.getcontact.com</b> service is available in the <b>eSIM.io</b> application."])},
  "Scan the code to download the eSIM.io application.": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Scan the code to download the eSIM.io application."])},
  "Go to the application": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Go to the application"])},
  "When you clicked Add Button": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["9F/ 'DFB1 AHB \"%6'A) 21\""])},
  "QR Code": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["1E2 'D'3*,'() 'D31J9)"])},
  "Manual": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["J/HJ"])},
  "Manual Installation": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'D*+(J* 'DJ/HJ"])},
  "Remaining Data": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'D(J'F'* 'DE*(BJ)"])},
  "My Packages": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'D-2E 'D.'5) (J"])},
  "Available Top-up Packages": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["('B'* 'D*9(&) 'DE*HA1)"])},
  "Installation Steps": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([".7H'* 'D*+(J*"])},
  "installation.manual-installation-step-1": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["1.'F*BD %DI 'D%9/'/'*> 'D.DHJ / 'D,H'D> %6'A) .77 .DHJ) / .77 'DG'*A"])},
  "installation.manual-installation-step-2": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["2.'6:7 9DI %/.'D J/HJK'"])},
  "installation.manual-installation-step-3": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["3. #/.D 9FH'F SM-DP H1E2 'D*A9JD"])},
  "installation.manual-installation-step-4": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["4.'6:7 9DI %6'A) .7) .DHJ)"])},
  "installation.manual-installation-step-5": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["5- BE (*3EJ) eSIM"])},
  "<b>Important: eSIM</b> can only be installed once.": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["<b> G'E: D' JECF *+(J* eSIM</b> %D' E1) H'-/)."])},
  "<b>Do NOT DELETE/REMOVE</b> your eSIM from your device after successful installation": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["<b> D' *-0A / *2JD </ b> eSIM EF ,G'2C (9/ 'D*+(J* 'DF',-"])},
  "QR Code Installation": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["*+(J* 1E2 'D'3*,'() 'D31J9)"])},
  "Install your eSIM": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["+(Q* eSIM 'D.'5 (C"])},
  "Installation Instructions": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["*9DJE'* 'D*-EJD"])},
  "To manually activate the eSIM on your eSIM capable device you need to print or display this QR code on your device": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["D*F4J7 eSIM J/HJK' 9DI ,G'2 B'/1 9DI eSIM *-*', %DI 7('9) #H 916 1E2 QR G0' 9DI ,G'2C"])},
  "Do not remove your eSIM from your device After successful installation": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["D' *BE (%2'D) eSIM EF ,G'2C (9/ 'D*+(J* 'DF',-"])},
  "To manually activate the eSIM on your eSIM capable device": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["D*F4J7 eSIM J/HJK' 9DI ,G'2C 'D0J J/9E eSIM"])},
  "Please copy this information for manually installing the eSIM your device. é Make sure your device has a stable internet connection": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["J1,I F3. G0G 'DE9DHE'* D*+(J* eSIM J/HJK' D,G'2C. *#C/ EF #F ,G'2C (G '*5'D %F*1F* +'(*"])},
  "SM-DP-ADDRESS": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["9FH'F SM-DP"])},
  "ACTIVATION CODE": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["1E2 'D*A9JD"])},
  "Thanks": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["4C1'"])},
  "Your plan is ready to use.": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([".7*C ,'G2) DD'3*./'E."])},
  "Details have been sent to:": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["*E %13'D 'D*A'5JD %DI:"])},
  "If you wish, you can manage your eSIM installation from the Getcontact Mobile application.": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["%0' CF* *1:( AJ 0DC JECFC %/'1) *+(J* eSIM 'D.'5 (C EF *7(JB Getcontact Mobile."])},
  "Download Getcontact": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["BE (*F2JD Getcontact"])},
  "First Name": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'D'3E 'D#HD"])},
  "Last Name": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'DCFJ)"])},
  "Email Address": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["9FH'F (1J/ 'DC*1HFJ"])},
  "You dont have any credit card saved yet.": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["DJ3 D/JC #J (7'B) '&*E'F E-AH8) -*I 'D"F."])},
  "Add Card": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["BE (%6'A) (7'B)"])},
  "Back": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["1,H9"])},
  "Expiry Date": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["*'1J. 'F*G'! 'D5D'-J):"])},
  "Purchase History": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["3,D 'D41'!"])},
  "Actions": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["#,1'!'*"])},
  "Status": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["-'D)"])},
  "Active": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["F4J7"])},
  "Expired": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["EF*GJ) 'D5D'-J)"])},
  "Pending": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["BJ/ 'D'F*8'1"])},
  "Country": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'D/HD)"])},
  "Data": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["(J'F'*"])},
  "Validity": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["5D'-J)"])},
  "Price": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'D391"])},
  "Details": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["*A'5JD"])},
  "Show All Packages": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["916 CD 'D-2E"])},
  "Would you like to Purchase a new eSIM ?": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["GD *1:( AJ 41'! eSIM ,/J/"])},
  "Purchase an eSIM": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["41'! eSIM"])},
  "Log in / Sign up": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["3,D 'D/.HD / '4*1C"])},
  "Language": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'DD:)"])},
  "Back to Packages": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'D1,H9 %DI 'D('B'*"])},
  "Are you sure you want to delete your card?": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["GD #F* E*#C/ #FC *1J/ -0A (7'B*C"])},
  "Yes": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["F9E"])},
  "No": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["D'"])},
  "An error occurred. Please try again.": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["-/+ .7#. -'HD E1) '.1I."])},
  "Expires on {date}": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize(["*F*GJ 'D5D'-J) AJ ", _interpolate(_named("date"))])},
  "Update": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["BE ('D*-/J+"])},
  "Copied!": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["*E 'DF3.!"])},
  "eSIM Detail": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["*A'5JD eSIM"])},
  "my-esim-subtitle": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["D' *H,/ .7) eSIM -*I 'D"F"])},
  "installation-subtitle": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["JECFC %/'1) .77C 'DE4*1') GF'."])},
  "add-saved-card-subtitle": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["9F/ %6'A) (7'B) ,/J/) 3*1I *A'5JD (7'B*C 'DE-AH8) GF'."])},
  "saved-card-subtitle": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["(7'B*C 'DE-AH8)"])},
  "You have successfully logged in. Redirecting...": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["DB/ BE* (*3,JD 'D/.HD (F,'-. ,'1M %9'/) 'D*H,JG ..."])},
  "Please fill in your name and surname to continue": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["J1,I ED! '3EC HDB(C DDE*'(9)"])},
  "Local": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["E-DJ"])},
  "Regional": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["%BDJEJ"])},
  "Global": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["9'DEJ"])},
  "This data plan can be used in {count} destinations": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize(["JECF '3*./'E .7) 'D(J'F'* G0G AJ ", _interpolate(_named("count")), " H,G)"])},
  "login.name-label": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["#/.D #3EC"])},
  "back-to-home": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'D9H/) %DI 'D5A-) 'D1&J3J)"])},
  "404.subtitle": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'D5A-) 'D*J CF* *(-+ 9FG' D' JECF 'D9+H1 9DJG'."])},
  "404.title": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["404 - 'D5A-) :J1 EH,H/)"])},
  "installation.global-data-plan": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([".7) 'D(J'F'* 'D9'DEJ)"])},
  "installation.regional-data-plan": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([".7) 'D(J'F'* 'D%BDJEJ)"])},
  "installation.local-data-plan": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([".7) 'D(J'F'* 'DE-DJ)"])},
  "packages.supported-countries-modal.search-placeholder": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'(-+ AJ 'D(D/'F"])},
  "packages.supported-countries-modal.subtitle": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["AJ #J 'D(D/'F JECFFJ '3*./'E .7*J 'D9'DEJ)"])},
  "packages.supported-countries-modal.title": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'D/HD 'DE/9HE)"])},
  "packages.global-tab": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["eSIMs 'D9'DEJ)"])},
  "packages.regional-tab": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["41'&- eSIM 'D%BDJEJ)"])},
  "packages.local-tab": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["eSIMs 'DE-DJ)"])},
  "packages.global-title": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["eSIMs 'D9'DEJ)"])},
  "packages.regional-title": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["41'&- eSIM 'D%BDJEJ)"])},
  "homepage.banner.image.text": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["BE (41'! .7) (J'F'* e-sim 'D.'5) (C D1-D*C %DI C#3 'D9'DE FIFA B71."])},
  "homepage.banner.button.text": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'4*1J 'D"F"])},
  "400601": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'D'3E 'D#HD :J1 5'D-"])},
  "400602": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'3E 'D9'&D) :J1 5'D-"])},
  "400000": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([".7# 9'E AJ 'D(J'F'*"])},
  "403002": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["1E2 'D@ Token :J1 EH,H/"])},
  "500015": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([".7# '+F'! 'D*-BB"])},
  "403033": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["E9DHE'* 'D-3'( :J1 5'D-)"])},
  "400010": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["(J'F'* :J1 5'D-)"])},
  "400014": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["9FH'F 'D(1J/ 'D%DC*1HFJ :J1 5'D-"])},
  "404001": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["901' A4D* 'DE9'ED). 'D1,'! E9'H/) 'DE-'HD) AJ HB* D'-B."])},
  "401002": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["901' A4D* 'DE9'ED). 'D1,'! E9'H/) 'DE-'HD) AJ HB* D'-B."])},
  "400002": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["-2E) :J1 5'D-). J1,I E-'HD) 41'! -2E) #.1I."])},
  "400003": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["-/+ .7# AJ F8'E 'D/A9. -'HD E1) '.1I."])},
  "400004": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["-/+ .7# AJ F8'E 'D/A9. -'HD E1) '.1I."])},
  "400005": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["A4D 'D',1'!."])},
  "400006": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["(7'B) 'D'&*E'F :J1 5'D-)"])},
  "400007": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["*901 (/! '4*1'C ,/J/ F81K' DH,H/ '4*1'C F47 ('DA9D."])},
  "400008": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["-/+ .7#. -'HD E1) '.1I."])},
  "400009": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["-/+ .7#. -'HD E1) '.1I."])},
  "400011": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["-/+ .7#. -'HD E1) '.1I."])},
  "400012": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["-/+ .7# AJ F8'E 'D/A9. -'HD E1) '.1I."])},
  "400013": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["-/+ .7# AJ F8'E 'D/A9. -'HD E1) '.1I."])},
  "400015": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["-/+ .7# #+F'! 9EDJ) '3*1/'/ 'D#EH'D."])},
  "500000": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([".7# 9'E"])},
  "500001": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["-/+ .7# AJ F8'E 'D/A9. -'HD E1) '.1I."])},
  "500002": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["-/+ .7# #+F'! %F4'! 'D'4*1'C. -'HD E1) '.1I."])},
  "500003": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["-/+ .7# #+F'! -A8 (7'B) 'D'4*1'C. -'HD E1) '.1I."])},
  "C0000000": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["-/+ .7# AJ 'D/A9. 'D1,'! E9'H/) 'DE-'HD) AJ HB* D'-B."])},
  "Z_400220": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["-/+ .7#. -'HD E1) '.1I."])},
  "Z_400221": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["-/+ .7#. -'HD E1) '.1I."])},
  "Z_400222": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["-/+ .7#. -'HD E1) '.1I."])},
  "Z_400223": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["*901 'D9+H1 9DI 'D-2E) 'DEF'3(). -'HD E1) '.1I."])},
  "Z_500220": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["-/+ .7# #+F'! 'D/A9. -'HD E1) '.1I."])},
  "Z_500221": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["-/+ .7# #+F'! %F4'! 'D7D(. -'HD E1) '.1I."])},
  "400224": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'DE3*./E HE91A sim :J1 E*7'(BJF"])},
  "400340": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["1BE (7'B) 'D'&*E'F :J1 5-J-"])},
  "400341": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["E'DC (7'B) 'D'&*E'F :J1 5-J-"])},
  "400342": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["4G1 'F*G'! 5D'-J) (7'B) 'D'&*E'F :J1 5-J-"])},
  "400343": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["3F) 'F*G'! 5D'-J) (7'B) 'D'&*E'F :J1 5-J-)"])},
  "400344": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["1E2 CVV D(7'B) 'D'&*E'F :J1 5-J-"])},
  "403012": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([".7# AJ 'D1BE. 'D1,'! 'D*H'5D E9F'"])},
  "Z_E0000027": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["F-F FH',G (96 'D*:JJ1'* :J1 'DE*HB9) 9DI 9EDJ'*F' AJ EF7B*C. HE9 0DC A%FF' F9ED -'DJK' 9DI -D 7D(C AJ #319 HB* EECF."])},
  "Z_E0000000": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["-/+ .7# #+F'! 'D/A9. -'HD E1) '.1I."])},
  "Z_E0000001": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["DB/ BE* (*3,JD 'D/.HD (F,'-. ,'1M %9'/) 'D*H,JG ..*E %D:'! 'DE9'ED) B(D 'DFB1 AHB 21 'D41'!."])},
  "Z_E0000002": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["A4D* 'DE9'ED) (3(( 9/E CA'J) -/ 'D(7'B)."])},
  "Z_E0000003": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["A4D 'D%,1'! D#FG DE J*E *FAJ0 'D*-BB (4CD 5-J-."])},
  "Z_E0000004": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["A4D 'D',1'!. J1,I 'D'*5'D ('D(FC 'D0J **9'ED E9G."])},
  "Z_E0000005": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["A4D* 'DE9'ED) (3(( .7# AFJ. 'D1,'! E9'H/) 'DE-'HD) AJ HB* D'-B."])},
  "Z_E0000006": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["#FGI 'DE3*./E %,1'! 'D/A9."])},
  "Z_E0000007": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["*E %D:'! *F4J7 (7'B*C DD*3HB 9(1 'D%F*1F*. J1,I 'D'*5'D ('D(FC 'D0J **9'ED E9G."])},
  "Z_E0000008": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["A4D* 'DE9'ED) (3(( 3J'3'* 'D#E'F."])},
  "Z_E0000009": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["A4D* 'DE9'ED) (3(( 1BE 'D(7'B) :J1 5'D-."])},
  "Z_E0000010": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["A4D* 'DE9'ED) (3(( *'1J. 'F*G'! 'D5D'-J) :J1 5'D-."])},
  "Z_E0000011": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["A4D* 'DE9'ED) D#F 'DE3*./E DE JB/E *#CJ/K'."])},
  "Z_E0000012": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["A4D* 'DE9'ED) (3(( *,'H2 -/ 'DE9'ED)."])},
  "Z_E0000013": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["A4D* 'DE9'ED) (3(( %/.'D E(D: :J1 5-J-."])},
  "Z_E0000014": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["*901 (/! '4*1'CC D#F 'D*-BB EF #E'F 3DS DE JF,-."])},
  "Z_E0000015": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'D(FC 'D0J **9'ED E9G DE J3E- ('DE9'ED)."])},
  "Z_E0000016": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'D(FC 'D0J **9'ED E9G DE J3E- ('DE9'ED). J1,I 'D'*5'D ('D(FC 'D0J **9'ED E9G."])},
  "Z_E0000017": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["DB/ #/.D* 1E2 CVV :J1 5-J-. J1,I 'D*-BB H%9'/) 'DE-'HD) AJ 'DE9'ED)."])},
  "Z_E0000018": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["*E 1A6 E9DHE'* (7'B*C 'D'&*E'FJ). J1,I 'D*-BB H%9'/) 'DE-'HD) AJ 'DE9'ED)."])},
  "Z_E0000019": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'F*G* 5D'-J) (7'B*C 'D'&*E'FJ). 'D1,'! E-'HD) (7'B) #.1I."])},
  "Z_E0000020": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["*E 1A6 'DE9'ED) D#FC #/.D* 1E2 *-BB .'7&K' 9/) E1'*."])},
  "Z_E0000021": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["A4D* 'DE9'ED) (3(( .7# AFJ. -'HD E1) '.1I."])},
  "Z_E0000022": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["(7'B*C 'D'&*E'FJ) :J1 5'D-) AJ E2H/ ./E) 'D/A9 'D-'DJ. J1,I *,1() (7'B) '&*E'F #.1I."])},
  "Z_E0000023": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["*E 1A6 (7'B) 'D'&*E'F 'D*J *1J/ '3*./'EG' DDE9'ED). J1,I *,1() (7'B) '&*E'F #.1I."])},
  "Z_E0000024": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["DB/ #/.D* 3F) 'F*G'! :J1 5-J-) D(7'B) 'D'&*E'F."])},
  "Z_E0000025": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["DB/ #/.D* 4G1 'F*G'! :J1 5-J- D(7'B) 'D'&*E'F."])},
  "Z_E0000026": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["DB/ #/.D* *'1J. 'F*G'! :J1 5-J- D(7'B) 'D'&*E'F."])},
  "Z_F0000000": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([":J1 B'/1 9DI E9'D,) E9'ED*C. J1,I 'D'*5'D (/9E 'D9ED'!."])},
  "Z_F0000001": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([":J1 B'/1 9DI E9'D,) E9'ED*C. J1,I 'D'*5'D (/9E 'D9ED'!."])},
  "Z_F0000002": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([":J1 B'/1 9DI E9'D,) E9'ED*C. J1,I 'D'*5'D (/9E 'D9ED'!."])},
  "Z_F0000003": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([":J1 B'/1 9DI E9'D,) E9'ED*C. J1,I 'D'*5'D (/9E 'D9ED'!."])},
  "Z_F0000004": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([":J1 B'/1 9DI E9'D,) E9'ED*C. J1,I 'D'*5'D (/9E 'D9ED'!."])},
  "Z_F0000005": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([":J1 B'/1 9DI E9'D,) E9'ED*C. J1,I 'D'*5'D (/9E 'D9ED'!."])},
  "Z_F0000006": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([":J1 B'/1 9DI E9'D,) E9'ED*C. J1,I 'D'*5'D (/9E 'D9ED'!."])},
  "Z_F0000007": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([":J1 B'/1 9DI E9'D,) E9'ED*C. J1,I 'D'*5'D (/9E 'D9ED'!."])},
  "Z_F0000008": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([":J1 B'/1 9DI E9'D,) E9'ED*C. J1,I 'D'*5'D (/9E 'D9ED'!."])},
  "Z_F0000009": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([":J1 B'/1 9DI E9'D,) E9'ED*C. J1,I 'D'*5'D (/9E 'D9ED'!."])},
  "Z_F0000010": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([":J1 B'/1 9DI E9'D,) E9'ED*C. J1,I 'D'*5'D (/9E 'D9ED'!."])},
  "Z_S0000001": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["9EDJ) F',-)."])},
  "Z_R0000001": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["('DF3() DDE9'ED)  *-*', %DI %9'/) 'D*H,JG %DI redirectUrl."])},
  "order-status": {
    "REFUND": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["*E* 'D%9'/)"])},
    "FINISHED": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["EF*GJ 'D5D'-J)"])},
    "ORDER_FAIL": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([".7# AJ *-/J/ 'DGHJ)"])},
    "PAYMENT_FAIL": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["9EDJ) 'D/A9 A4D*"])},
    "DELETED": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["*E 'D-0A"])},
    "IN_PROGRESS": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["BJ/ 'D'F*8'1"])},
    "STARTED": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([",'1 *,GJ2 'D(J'F'*"])},
    "PENDING_COMPLETE": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["AJ 'F*8'1 'D'C*E'D"])},
    "EXPIRED": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["EF*GJ 'D5D'-J)"])}
  },
  "countries": {
    "AF": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["#A:'F3*'F"])},
    "AL": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["#D('FJ'"])},
    "DZ": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'D,2'&1"])},
    "AS": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["3'EH' 'D#E1JCJ)"])},
    "AD": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["#F/H1'"])},
    "AO": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["#F:HD'"])},
    "AI": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["#F:HJD'"])},
    "AQ": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["#F*'1C*JC'"])},
    "AG": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["#F*J:H' H(1(H/'"])},
    "AR": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'D#1,F*JF"])},
    "AM": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["#1EJFJ'"])},
    "AW": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["#1H('"])},
    "AU": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["#3*1'DJ'"])},
    "AT": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'DFE3'"])},
    "AZ": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["#01(J,'F"])},
    "BS": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'D(G'E'"])},
    "BH": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'D(-1JF"])},
    "BD": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["(F:D'/J4"])},
    "BB": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["(1('/H3"])},
    "BY": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["(JD'1H3"])},
    "BE": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["(D,JC'"])},
    "BZ": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["(DJ2"])},
    "BJ": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["(FJF"])},
    "BM": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["(1EH/'"])},
    "BT": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["(H*'F"])},
    "BO": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["(HDJAJ'"])},
    "BA": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'D(H3F) H'DG13C"])},
    "BW": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["(H*3H'F'"])},
    "BR": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'D(1'2JD"])},
    "IO": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'D%BDJE 'D(1J7'FJ AJ 'DE-J7 'DGF/J"])},
    "VG": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([",21 AJ1,F 'D(1J7'FJ)"])},
    "BN": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["(1HF'J"])},
    "BG": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["(D:'1J'"])},
    "BF": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["(H1CJF' A'3H"])},
    "BI": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["(H1HF/J"])},
    "KH": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["CE(H/J'"])},
    "CM": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'DC'EJ1HF"])},
    "CA": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["CF/'"])},
    "CV": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'D1#3 'D#.61"])},
    "KY": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([",21 C'JE'F"])},
    "CF": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([",EGH1J) #A1JBJ' 'DH37I"])},
    "TD": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["*4'/"])},
    "CL": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["*4JDJ"])},
    "CN": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'D5JF"])},
    "CX": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([",2J1) C1J3E'3"])},
    "CC": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([",21 CHCH3 (CJDJF:)"])},
    "CO": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["CHDHE(J'"])},
    "KM": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([",21 'DBE1"])},
    "CK": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([",21 CHC"])},
    "CR": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["CH3*'1JC'"])},
    "HR": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["C1H'*J'"])},
    "CU": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["CH('"])},
    "CW": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["CH1'3'H"])},
    "CY": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["B(15"])},
    "CZ": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'D*4JC"])},
    "CD": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'DCHF:H - CJF4'3'"])},
    "DK": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'D/'FE1C"])},
    "DJ": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([",J(H*J"])},
    "DM": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["/HEJFJC'"])},
    "DO": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([",EGH1J) 'D/HEJFJC'F"])},
    "TL": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["*JEH1 - DJ4*J"])},
    "EC": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'D%CH'/H1"])},
    "EG": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["E51"])},
    "SV": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'D3DA'/H1"])},
    "GQ": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([":JFJ' 'D'3*H'&J)"])},
    "ER": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["%1J*1J'"])},
    "EE": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["%3*HFJ'"])},
    "ET": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["%+JH(J'"])},
    "FK": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([",21 AHCD'F/"])},
    "FO": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([",21 A'1H"])},
    "FJ": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["AJ,J"])},
    "FI": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["AFDF/'"])},
    "FR": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["A1F3'"])},
    "GF": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([":HJ'F' 'DA1F3J)"])},
    "PF": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["(HDJFJ2J' 'DA1F3J)"])},
    "GA": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'D:'(HF"])},
    "GM": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([":'E(J'"])},
    "GE": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([",H1,J'"])},
    "DE": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["#DE'FJ'"])},
    "GH": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([":'F'"])},
    "GI": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([",(D 7'1B"])},
    "GR": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'DJHF'F"])},
    "GL": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([":1JFD'F/"])},
    "GD": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([":1JF'/'"])},
    "GP": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([":H'/DH("])},
    "GU": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([":H'E"])},
    "GT": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([":H'*JE'D'"])},
    "GG": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([":J1F2J"])},
    "GN": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([":JFJ'"])},
    "GW": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([":JFJ' (J3'H"])},
    "GY": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([":J'F'"])},
    "HT": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["G'J*J"])},
    "HN": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["GF/H1'3"])},
    "HK": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["GHF: CHF: 'D5JFJ) (EF7B) %/'1J) .'5))"])},
    "HU": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["GF:'1J'"])},
    "IS": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([""J3DF/'"])},
    "IN": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'DGF/"])},
    "ID": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["%F/HFJ3J'"])},
    "IR": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["%J1'F"])},
    "IQ": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'D91'B"])},
    "IE": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["#J1DF/'"])},
    "IM": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([",2J1) E'F"])},
    "IL": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["%31'&JD"])},
    "IT": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["%J7'DJ'"])},
    "CI": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["3'-D 'D9',"])},
    "JM": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([",'E'JC'"])},
    "JP": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'DJ'('F"])},
    "JE": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([",J13J"])},
    "JO": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'D#1/F"])},
    "KZ": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["C'2'.3*'F"])},
    "KE": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["CJFJ'"])},
    "KI": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["CJ1J('*J"])},
    "XK": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["CH3HAH"])},
    "KW": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["('D'H"])},
    "KG": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["BJ1:J23*'F"])},
    "LA": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["D'H3"])},
    "LV": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["D'*AJ'"])},
    "LB": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["D(F'F"])},
    "LS": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["DJ3H*H"])},
    "LR": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["DJ(J1J'"])},
    "LY": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["DJ(J'"])},
    "LI": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["DJ.*F4*'JF"])},
    "LT": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["DJ*H'FJ'"])},
    "LU": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["DHC3E(H1:"])},
    "MO": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["EC'H"])},
    "MK": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["EB/HFJ'"])},
    "MG": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["E/:4B1"])},
    "MW": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["ED'HJ"])},
    "MY": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["E'DJ2J'"])},
    "MV": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([",21 'DE'D/JA"])},
    "ML": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["E'DJ"])},
    "MT": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["E'D7'"])},
    "MH": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([",21 E'14'D"])},
    "MQ": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([",21 'DE'1*JFJC"])},
    "MR": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["EH1J*'FJ'"])},
    "MU": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["EH1J4JH3"])},
    "YT": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["E'JH*"])},
    "MX": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'DEC3JC"])},
    "FM": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["EJC1HFJ2J'"])},
    "MD": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["EHD/HA'"])},
    "MC": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["EHF'CH"])},
    "MN": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["EF:HDJ'"])},
    "ME": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'D,(D 'D#3H/"])},
    "MS": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["EHF*31'*"])},
    "MA": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'DE:1("])},
    "MZ": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["EH2E(JB"])},
    "MM": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["EJ'FE'1 ((H1E')"])},
    "NA": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["F'EJ(J'"])},
    "NR": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["F'H1H"])},
    "NP": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["FJ('D"])},
    "NL": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["GHDF/'"])},
    "NC": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["C'DJ/HFJ' 'D,/J/)"])},
    "NZ": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["FJH2JDF/'"])},
    "NI": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["FJC'1':H'"])},
    "NE": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'DFJ,1"])},
    "NG": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["FJ,J1J'"])},
    "NU": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["FJHJ"])},
    "NF": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([",2J1) FH1AHDC"])},
    "KP": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["CH1J' 'D4E'DJ)"])},
    "MP": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([",21 E'1J'F' 'D4E'DJ)"])},
    "NO": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'DF1HJ,"])},
    "OM": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["9OE'F"])},
    "PK": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["('C3*'F"])},
    "PS": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'D#1'6J 'DAD37JFJ)"])},
    "PA": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["(FE'"])},
    "PG": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["('(H' :JFJ' 'D,/J/)"])},
    "PY": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["('1':H'J"])},
    "PE": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["(J1H"])},
    "PH": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'DAD(JF"])},
    "PN": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([",21 (J*CJ1F"])},
    "PL": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["(HDF/'"])},
    "PT": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'D(1*:'D"])},
    "PR": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["(H1*H1JCH"])},
    "QA": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["/HD) B71"])},
    "CG": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'DCHF:H - (1'2'AJD"])},
    "RE": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["1HJFJHF"])},
    "RO": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["1HE'FJ'"])},
    "RU": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["1H3J'"])},
    "RW": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["1H'F/'"])},
    "BL": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["3'F ('1*DJEJ"])},
    "SH": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["3'F* GJDJF'"])},
    "KN": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["3'F* CJ*3 HFJAJ3"])},
    "LC": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["3'F* DH3J'"])},
    "MF": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["3'F E'1*F"])},
    "PM": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["3'F (JJ1 HECHJDHF"])},
    "VC": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["3'F* AF3F* H,21 :1JF'/JF"])},
    "WS": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["3'EH'"])},
    "SM": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["3'F E'1JFH"])},
    "ST": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["3'H *HEJ H(1JF3J(J"])},
    "SA": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'DEEDC) 'D91(J) 'D39H/J)"])},
    "SN": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'D3F:'D"])},
    "RS": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["51(J'"])},
    "SC": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["3J4D"])},
    "SL": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["3J1'DJHF"])},
    "SG": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["3F:'AH1)"])},
    "SX": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["3'F* E'1*F"])},
    "SK": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["3DHA'CJ'"])},
    "SI": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["3DHAJFJ'"])},
    "SB": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([",21 3DJE'F"])},
    "SO": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'D5HE'D"])},
    "ZA": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([",FH( #A1JBJ'"])},
    "KR": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["CH1J' 'D,FH(J)"])},
    "SS": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([",FH( 'D3H/'F"])},
    "ES": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["%3('FJ'"])},
    "LK": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["31JD'FC'"])},
    "SD": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'D3H/'F"])},
    "SR": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["3H1JF'E"])},
    "SJ": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["3A'D('1/ H,'F E'JF"])},
    "SZ": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["%3H'*JFJ"])},
    "SE": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'D3HJ/"])},
    "CH": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["3HJ31'"])},
    "SY": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["3H1J'"])},
    "TW": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["*'JH'F"])},
    "TJ": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["7',JC3*'F"])},
    "TZ": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["*F2'FJ'"])},
    "TH": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["*'JD'F/"])},
    "TG": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["*H:H"])},
    "TK": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["*HCJDH"])},
    "TO": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["*HF:'"])},
    "TT": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["*1JFJ/'/ H*H(':H"])},
    "TN": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["*HF3"])},
    "TR": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["*1CJ'"])},
    "TM": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["*1CE'F3*'F"])},
    "TC": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([",21 *H1C3 HC'JCH3"])},
    "TV": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["*HA'DH"])},
    "VI": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([",21 AJ1,F 'D*'(9) DDHD'J'* 'DE*-/)"])},
    "UG": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["#H:F/'"])},
    "UA": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["#HC1'FJ'"])},
    "AE": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'D%E'1'* 'D91(J) 'DE*-/)"])},
    "GB": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'DEEDC) 'DE*-/)"])},
    "US": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'DHD'J'* 'DE*-/)"])},
    "UY": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["#H1:H'J"])},
    "UZ": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["#H2(C3*'F"])},
    "VU": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["A'FH'*H"])},
    "VA": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'DA'*JC'F"])},
    "VE": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["AF2HJD'"])},
    "VN": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["AJ*F'E"])},
    "WF": (ctx) => {const { normalize: _normalize } = ctx;return _normalize([",21 H'D3 HAH*HF'"])},
    "EH": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'D5-1'! 'D:1(J)"])},
    "YE": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'DJEF"])},
    "ZM": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["2'E(J'"])},
    "ZW": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["2JE('(HJ"])}
  },
  "ACCEPTED": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["*E* 'DEH'AB)"])},
  "FULFILLING": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["J*E 'D%F,'2"])},
  "COMPLETED": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["EF,2"])},
  "FAILED": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["('! ('DA4D"])},
  "page-titles": {
    "app-name": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Getcontact eSIM"])},
    "homepage": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'D5A-) 'D1&J3J)"])},
    "login": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["BE (*3,JD 'D/.HD"])},
    "login-by-verifykit": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["BE (*3,JD 'D/.HD 9F 71JB Verifykit"])},
    "country-packages": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["-2E 'D/HD"])},
    "payment": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["/A9 'D-2E)"])},
    "payment-success": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["*E 'D/A9 (F,'-"])},
    "installation-index": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["*A'5JD 'D*+(J*"])},
    "installation-qr": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["*1CJ( QR"])},
    "installation-manual": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'D*+(J* 'DJ/HJ"])},
    "account-information": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["E9DHE'* 'D-3'("])},
    "saved-cards-index": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'D(7'B'* 'DE-AH8)"])},
    "saved-cards-add": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["#6A %DI 'D(7'B'* 'DE-AH8)"])},
    "saved-cards-edit": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["9/QD 'D(7'B'* 'DE-AH8)"])},
    "my-esim": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["eSIM 'D.'5 (J"])},
    "404-page": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'D5A-) :J1 EH,H/)"])}
  },
  "credit-card.card-number-invalid": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["1BE 'D(7'B) :J1 5'D-"])},
  "credit-card.card-owner-invalid": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["E'DC 'D(7'B) :J1 5'D-"])},
  "credit-card.card-expiration-month-invalid": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["4G1 'F*G'! 5D'-J) 'D(7'B) :J1 5'D-"])},
  "credit-card.card-expiration-year-invalid": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["3F) 'F*G'! 5D'-J) 'D(7'B) :J1 5'D-)"])},
  "credit-card.card-cvv-invalid": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["1E2 #E'F 'D(7'B) :J1 5'D-"])},
  "saved-cards.add-card-title": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["BE (%6'A) (7'B)"])},
  "saved-cards.add-card-success-message": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["*E* %6'A) 'D(7'B) (F,'-."])},
  "saved-cards.update-card-success-message": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["*E *9/JD 'D(7'B) (F,'-."])},
  "saved-cards.delete-card-success-message": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["*E -0A 'D(7'B) (F,'-."])},
  "general-error-message": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["-/+ .7# E'. #9/ 'DE-'HD) EF A6DC."])},
  "search-country.empty-state-text": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'D(D/ :J1 EH,H/"])},
  "account-information.update-profile-success-message": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["*E *-/J+ E9DHE'* EDAC 'D4.5J (F,'-"])},
  "installation.order-does-not-exist": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'D7D( 'D0J *(-+ 9FG :J1 EH,H/."])},
  "payment-success.order-type-topup-text": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'FB1 DD-5HD 9DI *A'5JD eSIM 'D.'5) (C"])},
  "installation.qr-info-text": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["D' JECFC *(/JD ,G'2C (9/ 'D*+(J* 'DF',-. D0DC D' *BE (%2'D) eSIM 'DF47 EF ,G'2C."])},
  "installation.manual-info-text": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["D' JECFC *(/JD ,G'2C (9/ 'D*+(J* 'DF',-. D0DC D' *BE (%2'D) eSIM 'DF47 EF ,G'2C."])},
  "installation.detail-info-text": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["D' JECFC *(/JD ,G'2C (9/ 'D*+(J* 'DF',-. D0DC D' *BE (%2'D) eSIM 'DF47 EF ,G'2C."])},
  "installation.qr-installation-step-1:": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["'D%9/'/'*> 'D.DHJ / 'D,H'D> %6'A) .7) .DHJ) / ,H'D."])},
  "installation.qr-installation-step-2:": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["AE (E3- 1E2 'D'3*,'() 'D31J9)."])},
  "installation.qr-installation-step-3:": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["BE (*#CJ/ *A'5JD .7) eSIM."])},
  "installation.qr-installation-step-4:": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["BE (*3EJ) eSIM."])}
}